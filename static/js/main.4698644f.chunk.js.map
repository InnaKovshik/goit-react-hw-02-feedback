{"version":3,"sources":["components/Section/Section.js","components/FeedbackOption/FeedbackOption.js","components/Notification/Notification.js","components/Statistics/Statistics.js","data/constans.js","App.js","index.js"],"names":["Section","title","children","FeedbackButton","feedback","onLeaveFeedback","type","data-feedback","onClick","FeedbackOptions","options","map","option","Notification","message","Statistics","good","neutral","bad","total","positiveFeedback","FEEDBACK_OPTIONS","App","state","handelFeedback","target","dataset","setState","prevState","countTotalFeedback","countPositivePercentage","Math","round","this","FeedbackOption","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAgBeA,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACJC,MCJDC,EAAiB,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,gBAClC,OACE,wBAAQC,KAAK,SAASC,gBAAeH,EAAUI,QAASH,EAAxD,SACGD,KAgBQK,EAXS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASL,EAAsB,EAAtBA,gBAClC,OAAOK,EAAQC,KAAI,SAAAC,GAAM,OACvB,cAAC,EAAD,CAAgBR,SAAUQ,EAAQP,gBAAiBA,QCJxCQ,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KC0B3BC,EAzBI,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,KAAMC,EAA4C,EAA5CA,QAASC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,iBAC/C,OACE,uCACKD,GACD,+BACE,wCAAWH,KACX,4CAAeC,EAAf,OACA,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,QAGjB,IAAVD,GAAe,cAAC,EAAD,CAAcL,QAAQ,0BCf/BO,EAAmB,CAAC,OAAQ,UAAW,OCyDrCC,E,4MAhDbC,MAAQ,CACNP,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPM,eAAiB,YAAiB,IACxBpB,EADuB,EAAbqB,OACUC,QAApBtB,SACR,EAAKuB,UAAS,SAAAC,GAAS,sBAAQxB,EAAWwB,EAAUxB,GAAY,O,EAGlEyB,mBAAqB,WAAO,IAAD,EACM,EAAKN,MACpC,OAFyB,EACjBP,KADiB,EACXC,QADW,EACFC,K,EAIzBY,wBAA0B,WAAO,IACvBd,EAAS,EAAKO,MAAdP,KACFG,EAAQ,EAAKU,qBACnB,OAAOV,EAAQY,KAAKC,MAAOhB,EAAOG,EAAS,KAAO,G,4CAGpD,WAAU,IAAD,EACwBc,KAAKV,MAA5BP,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQc,KAAKJ,qBACbT,EAAmBa,KAAKH,0BAC9B,OACE,gCACE,cAAC,EAAD,CAAS7B,MAAM,wBAAf,SACE,cAACiC,EAAD,CACExB,QAASW,EACThB,gBAAiB4B,KAAKT,mBAG1B,cAAC,EAAD,CAASvB,MAAM,aAAf,SACE,cAAC,EAAD,CACEe,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,iBAAkBA,a,GAzCZe,aCHlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4698644f.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst FeedbackButton = ({ feedback, onLeaveFeedback }) => {\r\n  return (\r\n    <button type=\"button\" data-feedback={feedback} onClick={onLeaveFeedback}>\r\n      {feedback}\r\n    </button>\r\n  );\r\n};\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return options.map(option => (\r\n    <FeedbackButton feedback={option} onLeaveFeedback={onLeaveFeedback} />\r\n  ));\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string),\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\n\r\nNotification.propTypes = {\r\n  mesagge: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import PropTypes from 'prop-types';\r\nimport Notification from '../Notification';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positiveFeedback }) => {\r\n  return (\r\n    <>\r\n      {!!total && (\r\n        <ul>\r\n          <li>Good: {good}</li>\r\n          <li> Neutral: {neutral} </li>\r\n          <li>Bad: {bad}</li>\r\n          <li>Total: {total}</li>\r\n          <li>Positive Feedback: {positiveFeedback}</li>\r\n        </ul>\r\n      )}\r\n      {total === 0 && <Notification message=\"No feedback given\" />}\r\n    </>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positiveFeedback: PropTypes.number,\r\n};\r\n\r\nexport default Statistics;\r\n","export const FEEDBACK_OPTIONS = ['good', 'neutral', 'bad'];\r\n","import { Component } from 'react';\n\nimport Section from './components/Section';\nimport FeedbackOption from './components/FeedbackOption';\nimport Statistics from './components/Statistics';\n\nimport { FEEDBACK_OPTIONS } from './data/constans';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handelFeedback = ({ target }) => {\n    const { feedback } = target.dataset;\n    this.setState(prevState => ({ [feedback]: prevState[feedback] + 1 }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositivePercentage = () => {\n    const { good } = this.state;\n    const total = this.countTotalFeedback();\n    return total ? Math.round((good / total) * 100) : 0;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positiveFeedback = this.countPositivePercentage();\n    return (\n      <div>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOption\n            options={FEEDBACK_OPTIONS}\n            onLeaveFeedback={this.handelFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positiveFeedback={positiveFeedback}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}